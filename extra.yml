# Dwm
- name: Linking DWM repo
  file:
    src: /home/albert/dotfiles/dwm
    dest: /home/albert/.dwm
    state: link
  notify: compile-dwm

# Timezone
- name: Setting timezone
  timezone:
    hwclock: local
    name: Europe/Madrid
  become: true

# Grub
- name: Grub screen resolution
  replace:
    path: /etc/default/grub
    regexp: "{{item.exp}}"
    replace: "{{item.rep}}"
  with_items:
    - { exp: '^GRUB_GFXMODE\=.*$', rep: 'GRUB_GFXMODE=1920x1080,auto' }
    - { exp: '^[#]?GRUB_DISABLE_OS_PROBER\=.*$', rep: 'GRUB_DISABLE_OS_PROBER=false' }
    - { exp: '^GRUB_DEFAULT\=.*$', rep: 'GRUB_DEFAULT=saved' }
    - { exp: '^[#]?GRUB_SAVEDEFAULT\=.*$', rep: 'GRUB_SAVEDEFAULT=true' }
  notify: update-grub
  become: true

# Ly
- name: Configure ly service
  service:
    name: ly
    enabled: true
  become: true

- name: Blank password field after failure
  replace:
    path: /etc/ly/config.ini
    regexp: '#blank_password = true'
    replace: 'blank_password = true'
  become: true

# GTK

- name: Download Dracula theme for GTK
  unarchive:
    src: https://github.com/dracula/gtk/archive/master.zip
    dest: /tmp/
    remote_src: true
    creates: /home/albert/.themes/Dracula/README.md
  notify: copy-gtk-theme-temp

- name: Apply GTK Dracula Theme 1
  dconf:
    key: /org/gnome/desktop/interface
    value: "['gtk-theme', 'Dracula']"

- name: Apply GTK Dracula Theme 2
  dconf:
    key: "/org/gnome/desktop/wm/preferences"
    value: "['theme', 'Dracula']"

# Wallpapers

- name: Create wallpapers directory
  file:
    path: /home/albert/wallpapers
    state: directory


- name: Download wallpapers
  unarchive:
    src: https://www.albertcanales.com/wallpapers.zip
    dest: /home/albert/wallpapers/
    remote_src: true
    creates: /home/albert/wallpapers/README.md


# Sudoers

- name: Allow albert to run power commands without password
  community.general.sudoers:
    name: albert-power-commands
    user: albert
    commands:
      - /bin/systemctl poweroff
      - /bin/systemctl reboot
      - /bin/systemctl suspend
      - /bin/loginctl terminate-session
    nopassword: true
  become: true


# Nvim

- name: Install nvim plugins
  command: "/home/albert/dotfiles/nvim/plugins.sh"
  register: nvim_plugins
  changed_when: "nvim_plugins.rc == 1"
  failed_when: "nvim_plugins.rc not in [0, 1]"


# Faillock

- name: Disable denial of sudo access after any failed attempts
  replace:
    path: "/etc/security/faillock.conf"
    regexp: '^(# )?deny \=.*$'
    replace: 'deny = 0'
  become: true


# Bluetooth

- name: Enable bluetooth service
  service:
    name: bluetooth
    enabled: true
  become: true

# Network

- name: Enable network manager service
  service:
    name: NetworkManager
    enabled: true
  become: true

- name: Disable networkd service
  service:
    name: systemd-networkd
    enabled: false
  become: true


# PCManFM

- name: Adding polkit rule to allow mounting
  copy:
    src: /home/albert/dotfiles/polkit/
    dest: /etc/polkit-1/rules.d/
  become: true

- name: Adding user albert to storage group
  user: name=albert
        groups=storage
        append=yes
  become: true

# Xorg

- name: Adding xorg configurations
  copy:
    src: /home/albert/dotfiles/xorg/
    dest: /etc/X11/xorg.conf.d/
  become: true

# Hosts file

- name: Add Home Server to hosts file
  lineinfile:
    path: /etc/hosts
    search_string: 'home.local'
    line: '192.168.1.29 home.local'
  become: true

# Zathura

- name: Get default application for PDF viewing
  command: xdg-mime query default application/pdf
  changed_when: false
  register: xdg_default_pdf

- name: Set Zathura as the default PDF application
  command: xdg-mime default org.pwmt.zathura.desktop application/pdf
  when: '"org.pwmt.zathura.desktop" != xdg_default_pdf.stdout'

# Systemd

- name: Copy systemd services
  copy:
    src: systemd/
    dest: /etc/systemd/system
  become: true

# Slock

- name: Enable and start slock service
  service:
    name: slock@albert.service
    enabled: true
  become: true

# Pacman

- name: Pacman enable parallel downloads
  replace:
    path: /etc/pacman.conf
    regexp: "^[#]?ParallelDownloads.*$"
    replace: 'ParallelDownloads = 5'
  become: true

- name: Pacman enable multilib mirror
  replace:
    path: /etc/pacman.conf
    regexp: |
      #\[multilib\]
      #Include = \/etc\/pacman\.d\/mirrorlist
    replace: |
      [multilib]
      Include = /etc/pacman.d/mirrorlist
  become: true

# Spicetify

- name: Grant Spicetify permission Spotify's files
  file:
    path: "{{ item.path }}"
    mode: a+wr
    recurse: "{{ item.recurse }}"
  with_items:
    - {path: /opt/spotify, recurse: false}
    - {path: /opt/spotify/Apps, recurse: true}
  become: true

- name: Get Spicetify theme
  shell: "spicetify config | grep 'current_theme' | awk '{print $2}'"
  changed_when: false
  register: spicetify_theme

- name: Get Spicetify scheme
  shell: "spicetify config | grep 'color_scheme' | awk '{print $2}'"
  changed_when: false
  register: spicetify_scheme

- name: Set Spicetify theme
  shell: "spicetify config current_theme Sleek"
  with_items:
    - {param: , value: }
  when: 'spicetify_theme.stdout != "Sleek"'
  notify: spicetify-apply

- name: Set Spicetify scheme
  shell: "spicetify config color_scheme Elementary"
  with_items:
    - {param: , value: }
  when: 'spicetify_scheme.stdout != "Elementary"'
  notify: spicetify-apply